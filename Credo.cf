comment "//" ;
comment "/*" "*/" ;

Program. Program ::= [Function];
terminator Function "";

Function.  Function ::= Type Ident "(" [Declaration] ")" "{" [Statement] "}";
separator  Declaration ",";
terminator Statement ";";

Declaration.  Declaration ::= Type Ident;

-- separator  nonempty Ident "," ;

SDeclaration.   Statement ::= Declaration;
SExpression.    Statement ::= Expression;
SBlock.  Statement ::= "{" [Statement] "}" ;
--SWhile.  Statement ::= "while" "(" Expression ")" Statement ;
--SReturn. Statement ::= "return" Expression;

EAssignment. Expression  ::= Ident "=" Expression ;
ELess. Expression1 ::= Expression2 "<" Expression2 ;
EAdd.    Expression2 ::= Expression2 "+" Expression3 ;
--ESub.    Expression2 ::= Expression2 "-" Expression3 ;
--EMul.    Expression3 ::= Expression3 "*" Expression4 ;
ECall.    Expression4 ::= Ident "(" [Expression] ")" ;
EVariable.    Expression4 ::= Ident ;
--EStr.    Expression4 ::= String;
EBoolean. Expression4 ::= Boolean;
EInteger.    Expression4 ::= Integer;
--EDouble. Expression4 ::= Double;

coercions Expression 4 ;

separator Expression ",";

TBoolean. Type ::= "bool";
TInt. Type ::= "int";
--TDouble. Type ::= "double";

ValueFalse. Boolean ::= "false";
ValueTrue. Boolean ::= "true";
